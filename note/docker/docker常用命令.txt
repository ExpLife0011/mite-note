docker run 启动容器
docker push 	上传image
docker build 创建image
docker tag 标记image
docker rmi 移除image


查看容器的root用户密码（随即分配的）
docker logs <容器名orID> 2>&1 | grep '^User: ' | tail -n1

查看容器日志
docker logs -f <容器名orID>

删除所有容器
docker rm $(docker ps -a -q)

停止、启动、杀死一个容器

docker stop <容器名orID>
docker start <容器名orID>
docker kill <容器名orID>

删除所有镜像
docker rmi $(docker images | grep none | awk '{print $3}' | sort -r)

运行一个新容器，同时为它命名、端口映射、文件夹映射。以redmine镜像为例
docker run --name redmine -p 9003:80 -p 9023:22 -d -v /var/redmine/files:/redmine/files -v /var/redmine/mysql:/var/lib/mysql sameersbn/redmine

一个容器连接到另一个容器
docker run -i -t --name sonar -d -link mmysql:db   tpires/sonar-server
sonar


当需要把一台机器上的镜像迁移到另一台机器的时候，需要保存镜像与加载镜像。
机器a
docker save busybox-1 > /home/save.tar
使用scp将save.tar拷到机器b上，然后：
docker load < /home/save.tar



重新查看container的stdout
# 启动top命令，后台运行
$ ID=$(sudo docker run -d ubuntu /usr/bin/top -b)
# 获取正在running的container的输出
$ sudo docker attach $ID
top - 02:05:52 up  3:05,  0 users,  load average: 0.01, 0.02, 0.05
Tasks:   1 total,   1 running,   0 sleeping,   0 stopped,   0 zombie
Cpu(s):  0.1%us,  0.2%sy,  0.0%ni, 99.7%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st
Mem:    373572k total,   355560k used,    18012k free,    27872k buffers
Swap:   786428k total,        0k used,   786428k free,   221740k cached
^C$



后台运行(-d)、并暴露端口(-p)

docker run -d -p 127.0.0.1:33301:22 centos6-ssh



从container中拷贝文件出来

sudo docker cp 7bb0e258aefe:/etc/debian_version .

拷贝7bb0e258aefe中的/etc/debian_version到当前目录下。



Dockerfile中的EXPOSE、docker run --expose、docker run -p之间的区别
Dockerfile的EXPOSE相当于docker run --expose，提供container之间的端口访问。docker run -p允许container外部主机访问container的端口








// 1.查看类命令
	docker ps     查看运行的容器

	docker images 显示images
	
	docker search 查找images
	

// 2.仓库操作类指令
	docker pull 下载
	docker pull daocloud.io/library/ubuntu:wily-20160706 拉取了一个非官方的镜像

	

// 3.在容器中修改内容后提交一个新的image
	docker commit -m="add ping and vim" -a="LiTianjue" 9e603f32420e daocloud.io/ubuntu:v2
	-m 注释信息
	-a 作者
	容器id + 版本标记(tag)

// 4. 使用Dockerfile 生成一个新的image
      执行dockerfile
	docker build -t="daocloud.io/ubuntu:v3" .






挂载目录
-v 选项
-v 本地路径:容器路径
-v 本地路径:容器路径:ro		//只读挂载
也可以挂载单个文件
-v /home/andy/.vimrc:/root/.vimrc




// 小技术
 docker 镜像一般都是最小安装包，很多工具都没有
 apt-get install inetutils-ping   //ping
 ifconfig 可以用 ip addr 命令代替
 或者 apt-get install net-tools

# 前台启动容器
	docker run -it daocloud.io/ubuntu /bin/bash
# 删除所有容器
 sudo docker rm $(sudo docker ps -a -q)

#退出时删除容器
	docker run --rm -i -t busybox /bin/bash

#运行的时候没有tun 设备
      --privileged